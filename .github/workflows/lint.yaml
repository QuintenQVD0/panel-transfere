name: Lint

on:
  pull_request:
    branches:
      - '**'

jobs:
  pint:
    name: Pint
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: |
            bcmath
            curl
            gd
            mbstring
            mysql
            openssl
            pdo
            tokenizer
            xml
            zip
          tools: composer:v2

      - name: Setup .env
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts

      - name: Run Pint
        run: vendor/bin/pint --test

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3, 8.4]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: |
            bcmath
            curl
            gd
            mbstring
            mysql
            openssl
            pdo
            tokenizer
            xml
            zip
          tools: composer:v2

      - name: Setup .env
        run: cp .env.example .env

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --no-scripts

      - name: Run PHPStan
        run: vendor/bin/phpstan --memory-limit=-1